name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        bun-version: ['1.0.0', 'latest']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: ${{ matrix.bun-version }}
    
    - name: Install dependencies
      run: bun install
    
    - name: Run type check
      run: bun run tsc --noEmit
    
    - name: Run tests
      run: bun test
    
    - name: Build project
      run: bun run compile
    
    - name: Test compilation
      run: |
        chmod +x dbm
        ./dbm --help || echo "Binary created successfully"

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    - name: Install dependencies
      run: bun install
    
    - name: Run linting
      run: |
        # Add linting commands here when available
        echo "Linting checks would go here"

  build-matrix:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        bun-version: ['latest']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: ${{ matrix.bun-version }}
    
    - name: Install dependencies
      run: bun install
    
    - name: Build for current platform
      run: bun run compile
    
    - name: Build for Windows
      if: matrix.os == 'ubuntu-latest'
      run: bun run compile-windows
    
    - name: Build for Linux
      if: matrix.os == 'ubuntu-latest'
      run: bun run compile-linux
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries-${{ matrix.os }}
        path: |
          dbm
          dbm.exe
        retention-days: 30
